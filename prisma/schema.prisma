// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Doctor {
  id        Int       @id @default(autoincrement())
  name      String
  specialty String
  phone     String
  email     String @unique
  schedules Schedule[]
  appointments Appointment[]
}

model Patient {
  id        Int       @id @default(autoincrement())
  name      String
  dob       DateTime // Fecha de nacimiento
  phone     String
  email     String @unique
  address   String
  appointments Appointment[]
  payments  Payment[]
}

model Appointment {
  id          Int       @id @default(autoincrement())
  date        DateTime
  status      String // Pendiente, Confirmada, Cancelada
  doctor      Doctor   @relation(fields: [doctorId], references: [id])
  doctorId    Int
  patient     Patient  @relation(fields: [patientId], references: [id])
  patientId   Int
  service     Service  @relation(fields: [serviceId], references: [id])
  serviceId   Int
  payment     Payment?
}

model Schedule {
  id         Int       @id @default(autoincrement())
  dayOfWeek  String    // Ejemplo: Lunes, Martes...
  startTime  String    // Ejemplo: "09:00"
  endTime    String    // Ejemplo: "17:00"
  doctor     Doctor    @relation(fields: [doctorId], references: [id])
  doctorId   Int
}

model Payment {
  id            Int       @id @default(autoincrement())
  amount        Float
  method        String    // Efectivo, Tarjeta, Transferencia
  date          DateTime
  appointment   Appointment @relation(fields: [appointmentId], references: [id])
  appointmentId Int       @unique
  patient       Patient  @relation(fields: [patientId], references: [id])
  patientId     Int
}


model Service {
  id          Int       @id @default(autoincrement())
  name        String
  description String
  price       Float
  appointments Appointment[]
}
